#### 他ファイルで変更されないように定数(値が変わらない変数)はconfig.py内で 
#### 定義します。値を使いたくなったらimportをして使うようにしてください。 by sunaga


HOST = '127.0.0.1'
PORT = 50000
BACKLOG = 10
BUFSIZE = 4096

#壁は定数を用意する　－＞　見やすくなるから
#通路も定数を用意したかったがよい変数名がなかったのでとりあえず保留 by sunaga
#壁
W = 1 


#### 迷路を定義->みんなでひとつずつ迷路を定義してくれ by sunaga
#### 1が壁 0が通路　
#### 10x10以上がいいなー
#### 4隅は0固定で頼む!!!! -> プレイヤーを置くから by sunaga

#野島が作る迷路
NOJIMA_MAZE = [
                [0,0,0,0,0,0,0,0,0,0,0],
                [0,W,W,W,0,W,0,W,W,W,0],
                [0,W,0,0,0,W,0,0,0,W,0],
                [0,W,0,W,0,W,0,W,0,W,0],
                [0,0,0,0,0,0,0,0,0,0,0],
                [0,W,W,W,0,W,0,W,W,W,0],
                [0,0,0,0,0,0,0,0,0,0,0],
                [0,W,0,W,0,W,0,W,0,W,0],
                [0,W,0,0,0,W,0,0,0,W,0],
                [0,W,W,W,0,W,0,W,W,W,0],
                [0,0,0,0,0,0,0,0,0,0,0]
               ]


#ガイアが作る迷路
GAIA_MAZE = [[]]


#須永が作る迷路  ->  壁をWにするとマップ見やすくない？
SUNAGA_MAZE = [
                [0,W,W,0,0,W,0,0,0,0],
                [0,0,0,0,0,0,0,W,0,0],
                [0,W,0,0,W,0,0,0,0,W],
                [0,W,0,0,0,0,W,0,0,0],
                [0,0,0,W,0,0,W,0,W,0],
                [W,W,0,0,W,0,W,0,W,0],
                [0,0,0,0,0,0,W,0,0,W],
                [0,W,W,W,0,0,0,0,0,0],
                [0,0,0,0,0,0,W,0,W,0],
                [0,0,W,0,W,0,0,0,0,0]
               ]

#みんなで作った迷路を格納します
MAZE_LIST = [NOJIMA_MAZE, GAIA_MAZE, SUNAGA_MAZE]

#座標は定数にして扱った方がミスが減るので固定しておく。
#例　posi = [2,3]
# x = posi[0], y = posi[1] より
# x = posi[X], y = posi[Y] の方が分かりやすい
X = 0
Y = 1


# Playerが選択するコマンド一覧
RIGHT  = (1,0)
LEFT   = (-1,0)
UP     = (0,1)
DOWN   = (0,-1)

#ごめん、攻撃方向も入れるべきだった
RIGHT_ATTACK = (1,0)
LEFT_ATTACK = (-1,0)
UP_ATTACK = (0,1)
DOWN_ATTACK = (0,-1)


def get_direct_str(COMMAND):
    '''
        与えられたコマンドに対応する方向を文字列で返す
    '''
    if(COMMAND == (1,0)):
        return "RIGHT"
    elif(COMMAND == (-1,0)):
        return "LEFT"
    elif(COMMAND == (0,1)):
        return "UP"
    elif(COMMAND == (0,-1)):
        return "DOWN"
    else:
        return None



